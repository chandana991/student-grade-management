#include <stdio.h>
#include <string.h>

// Structure to represent a student
struct Student {
    int studentID;
    char name[50];
    float grade;
};

// Function to add a student record
void addStudent(struct Student *students, int *count) {
    printf("Enter student ID: ");
    scanf("%d", &students[*count].studentID);
    getchar(); // To consume the newline character left by scanf

    printf("Enter student name: ");
    fgets(students[*count].name, 50, stdin);
    students[*count].name[strcspn(students[*count].name, "\n")] = '\0'; // Remove newline character

    printf("Enter student grade: ");
    scanf("%f", &students[*count].grade);

    (*count)++;
    printf("Student added successfully!\n");
}

// Function to display all student records
void displayStudents(struct Student *students, int count) {
    if (count == 0) {
        printf("No student records available.\n");
    } else {
        printf("\nList of Students:\n");
        printf("ID\tName\t\tGrade\n");
        printf("-----------------------------\n");
        for (int i = 0; i < count; i++) {
            printf("%d\t%s\t\t%.2f\n", students[i].studentID, students[i].name, students[i].grade);
        }
    }
}

// Function to update a student's grade by their ID
void updateGrade(struct Student *students, int count) {
    int id;
    printf("Enter student ID to update grade: ");
    scanf("%d", &id);

    int found = 0;
    for (int i = 0; i < count; i++) {
        if (students[i].studentID == id) {
            printf("Enter new grade for %s: ", students[i].name);
            scanf("%f", &students[i].grade);
            printf("Grade updated successfully!\n");
            found = 1;
            break;
        }
    }

    if (!found) {
        printf("Student with ID %d not found.\n", id);
    }
}

int main() {
    struct Student students[100]; // Array to store student records
    int count = 0; // Keep track of the number of student records
    int choice;

    while (1) {
        printf("\nGrade Management System\n");
        printf("1. Add Student\n");
        printf("2. Display All Students\n");
        printf("3. Update Student Grade\n");
        printf("4. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                addStudent(students, &count);
                break;
            case 2:
                displayStudents(students, count);
                break;
            case 3:
                updateGrade(students, count);
                break;
            case 4:
                printf("Exiting system...\n");
                return 0;
            default:
                printf("Invalid choice. Please try again.\n");
        }
    }

    return 0;
}